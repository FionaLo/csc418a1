Neil Newman
997382443
CSC418 A2 Report
Nov. 6, 2013

The penguin is composed of a torso, a head, a beak, two fins, and two legs. The beak is composed of an upper and lower segment. The fins are composed of an upper segment and a smaller lower segment. The legs are split into the leg and foot. The objects are drawn in a kinematic tree, where an object inherits transformations applied to its parent nodes. The torso is at the root of this tree, and so transformations applied to the torso apply to the entire penguin. There are 3 basic shapes used to create the penguin: The feet are isoceles triangles, the legs and lower parts of the fin are non-uniformly scaled cubes, and the head, beak, torso, and upper fin are all trapazoids with differing dimensions. Since 3d rotations are not commutative, they always occur in the following order: x, y, z

Degrees of Freedom:
The penguin has 24 degrees of freedom as described in the handout. An additional parameter is the angle of the light source. The input ranges for these parameters were chosen to prevent strange motions: for example, the fin flaps outward from the body, but not inward. In such a case, the slider in the UI only moves in a single direction, because the other direction is disallowed. Also, in the case of the fin's roll a positive value is always used, regardless of the fact the rotation is clockwise for one side and counter-clockwise for the other. Joints are marked in the code via red spheres, created using the jointAt function which creates a joint at a specified offset from the current position. Rotations around joints are specified by a map of axis:rotation.

Render Styles:
The penguin can be rendered in a wireframe view, a solid view, and a solid view with outlines. The wireframe view will call the draw penguin function with: glPolygonMode( GL_FRONT_AND_BACK, GL_LINE ). The solid will draw it with glPolygonMode(GL_FRONT_AND_BACK, GL_FILL). The solid with outlines will first draw the solid view, and then calls glEnable(GL_POLYGON_OFFSET_LINE) and specifies a polygon offset so that the lines show up in front of the solids. The line width is increased for a more dramatic effect. 

Lighting:
Normals are specified along with each vertex for lighting purposes, and smooth shading is used. The user can enable the "metallic" or "matte" views of the penguin, which will enable the lights and alter the material properties of the penguin. The metallic has high specular reflection and low diffuse reflection, whereas the matte has high diffuse and lower specular. The light is a directional light, placed on z = 0 plane, and can be rotated by the user interface. It's direction is marked on the screen via a sphere. 

Animation:
Animation is performed by storing keyframes of the penguin in different poses and using Catmull-Romm interpolation. A sample animation has been included with the project submission.